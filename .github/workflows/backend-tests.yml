name: Backend Tests

on:
  workflow_call:

permissions:
  contents: read
  pull-requests: write
  issues: write
  repository-projects: read

jobs:
  backend-tests:
    name: Backend Unit Tests (Pytest)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Create virtual environment
        run: uv venv
        working-directory: backend

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          # Install main dependencies
          uv pip install Flask==3.0.0 Flask-CORS==4.0.0 gunicorn==21.2.0 requests==2.31.0 PyNaCl==1.5.0
          # Install openhands-sdk
          uv pip install "openhands-sdk @ git+https://github.com/all-hands-ai/agent-sdk.git@main#subdirectory=openhands/sdk"
          # Install dev dependencies
          uv pip install pytest>=7.0.0 pytest-flask>=1.2.0 pytest-cov>=4.0.0 black>=23.0.0 flake8>=6.0.0 mypy>=1.0.0 types-requests
        working-directory: backend

      - name: Create test data directory
        run: mkdir -p /tmp/test-data
        
      - name: Run pytest with coverage (excluding E2E tests)
        run: |
          source .venv/bin/activate
          pytest --cov=. --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-report=term-missing -v --ignore=tests/test_e2e_basic.py --ignore=tests/test_e2e_integrations.py --ignore=tests/test_e2e_apps.py --ignore=tests/test_e2e_riffs.py --ignore=tests/test_e2e_key_validation.py
        working-directory: backend
        env:
          DATA_DIR: /tmp/test-data

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: backend/
          flags: backend-unit
          name: backend-unit-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/htmlcov/
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/coverage.xml
          retention-days: 7

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: orgoro/coverage@v3.1
        with:
          coverageFile: backend/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate test summary
        if: always()
        run: |
          echo "## Backend Test Results (Unit Tests)" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Unit tests completed (E2E tests run separately)" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“Š Coverage report generated" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ”— E2E tests run in dedicated workflow" >> $GITHUB_STEP_SUMMARY
          if [ -f "backend/coverage.xml" ]; then
            echo "- ðŸ“ˆ Coverage details available in artifacts" >> $GITHUB_STEP_SUMMARY
          fi